#!/bin/bash
# GET ALL USER INPUT
echo "Root Domain Name (eg. example.com)? All URLs will be set to *.example.com."
read DOMAIN
echo "App name (eg. testapp)? Must be lower case as it is part of the URLs"
read APP_NAME
echo "Dashboard name (eg. dashboard will be installed on https://dashboardname.$APP_NAME.$DOMAIN)?"
read DASH_NAME
echo "App backend name (eg. backend will be installed on https://backendname.$APP_NAME.$DOMAIN)?"
read BACK_NAME
echo "Your Email-Address for important letsencrypt account notifications"
read EMAIL
tput setaf 2; echo 'Welcome to Parse Server and Dashboard on Ubuntu 18.04 install bash script';
sleep 2;
tput sgr0
cd /root
tput setaf 2; echo 'Installing Certbot, Node.js, Nginx Server';
sleep 2;
tput sgr0
sudo apt-get update

sudo curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -

sudo apt-get install -y nodejs pwgen  software-properties-common
# sudo apt-get install -y nginx
sudo add-apt-repository -y ppa:certbot/certbot
sudo apt-get update
sudo apt install -y python-certbot-nginx

tput setaf 2; echo "Now installing all components....."
sleep 2;
# tput sgr0
# cd /etc/nginx/sites-available/
# sudo cp /root/parse-server-dashboard-ubuntu-18.04/nginx-settings-backend.conf "./$BACK_NAME.$APP_NAME.$DOMAIN"
# sudo cp /root/parse-server-dashboard-ubuntu-18.04/nginx-settings-dashboard.conf "./$DASH_NAME.$APP_NAME.$DOMAIN"
# sudo sed -i -e "s/app.example.com/$BACK_NAME.$APP_NAME.$DOMAIN/" "$BACK_NAME.$APP_NAME.$DOMAIN"
# sudo sed -i -e "s/dash.example.com/$DASH_NAME.$APP_NAME.$DOMAIN/" "$DASH_NAME.$APP_NAME.$DOMAIN"

# sudo ln -s /etc/nginx/sites-available/"$BACK_NAME.$APP_NAME.$DOMAIN" /etc/nginx/sites-enabled/
# sudo ln -s /etc/nginx/sites-available/"$DASH_NAME.$APP_NAME.$DOMAIN" /etc/nginx/sites-enabled/

# tput setaf 2; echo "Setting up SSL"
# sleep 2;
# tput sgr0
# tput setaf 2; echo 'Downloading ssl_dhparam from mozilla.org';
# sudo curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/ssl/ffdhe4096.pem
# cd /etc/nginx/
# sudo mv nginx.conf nginx.conf.backup
# sudo cp /root/parse-server-dashboard-ubuntu-18.04/nginx.conf ./
# sudo systemctl reload nginx
# sudo certbot --nginx --agree-tos -n -m "$EMAIL" -d "$BACK_NAME.$APP_NAME.$DOMAIN"
# sudo certbot --nginx --agree-tos -n -m "$EMAIL" -d "$DASH_NAME.$APP_NAME.$DOMAIN"

# sudo systemctl reload nginx

tput setaf 2; echo 'Installing Mongo DB';
sleep 2;
tput sgr0
sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4
echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list
sudo apt-get update
sudo apt-get install -y mongodb-org
sudo service mongod start
sudo systemctl enable mongod.service

cd /root
tput setaf 2; echo 'Installing Parse Server Dashboard and PM2';
sleep 2;
tput sgr0
sudo git clone https://github.com/ParsePlatform/parse-server-example.git $APP_NAME
cd $APP_NAME
npm install -g parse-server mongodb-runner parse-dashboard pm2@latest --no-optional --no-shrinkwrap
echo
tput setaf 2; echo 'Preparing Dashboard Configuration Files';
sleep 2;

sudo cp /root/parse-server-dashboard-ubuntu-18.04/dashboard-running.json ./
sudo cp /root/parse-server-dashboard-ubuntu-18.04/parse-dashboard-config.json ./
npm -g install
echo
tput setaf 2; echo 'Adding APP_ID and MASTER_KEY';
sleep 2;
tput sgr0
APP_ID=`pwgen -s 24 1`
sudo sed -i "s/appId: process.env.APP_ID || .*/appId: process.env.APP_ID || '$APP_ID',/" /root/$APP_NAME/index.js
sudo sed -i -e "s/APP_ID/$APP_ID/" "/root/$APP_NAME/parse-dashboard-config.json"
sudo sed -i -e "s/APP_NAME/$APP_NAME/" "/root/$APP_NAME/parse-dashboard-config.json"
sudo sed -i -e "s/DOMAIN/$BACK_NAME.$APP_NAME.$DOMAIN/" "/root/$APP_NAME/parse-dashboard-config.json"
sudo sed -i -e "s/APP_NAME/$APP_NAME/" "/root/$APP_NAME/dashboard-running.json"
sudo sed -i -e "s/localhost:1337/$BACK_NAME.$APP_NAME.$DOMAIN/" "/root/$APP_NAME/index.js"
sudo sed -i -e "s/http/https/" "/root/$APP_NAME/index.js"
MASTER_KEY=`pwgen -s 26 1`
sudo sed -i "s/masterKey: process.env.MASTER_KEY || .*/masterKey: process.env.MASTER_KEY || '$MASTER_KEY',/" /root/$APP_NAME/index.js
sudo sed -i -e "s/MASTER_KEY/$MASTER_KEY/" "/root/$APP_NAME/parse-dashboard-config.json"

PASS=`pwgen -s 9 1`
sudo sed -i -e "s/PASS/$PASS/" "/root/$APP_NAME/parse-dashboard-config.json"
tput setaf 2; echo 'Enable pm2';
echo
tput sgr0
pm2 start index.js && pm2 startup
pm2 start dashboard-running.json && pm2 startup
echo
echo
tput setaf 2; echo "Here are your Credentials"
echo "--------------------------------"
echo "APP_ID:   $APP_ID"
echo
echo "MASTER_KEY:   $MASTER_KEY"
echo
echo "App:        https://$BACK_NAME.$APP_NAME.$DOMAIN"
echo "Dashboard:  https://$DASH_NAME.$APP_NAME.$DOMAIN"
echo
echo "Username:   admin"
echo "Password:   $PASS"
echo "--------------------------------"
tput sgr0
echo
echo
tput setaf 2;  echo "Installation & configuration succesfully finished. Happy coding."
echo
sleep 2;
tput setaf 2; echo "Need app or backend development"
sleep 2;
echo "E-mail: john@pearldrift.com"
echo "Bye!"
tput sgr0
